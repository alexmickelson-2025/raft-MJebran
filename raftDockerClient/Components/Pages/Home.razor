@page "/"
@rendermode InteractiveServer
@using System.Collections.Concurrent; 

<PageTitle>Home</PageTitle>

<h1>Raft Simulation through Docker Client!</h1>



@foreach (var url in Urls)
{
    <p>@url</p>
}
@code {
    HttpClient http = new HttpClient();
    Timer timer;
    string[] Urls = Environment.GetEnvironmentVariable("NODE_URLS").Split(",");
    ConcurrentDictionary<string, NodeData> data = new();
    protected override async Task OnInitializedAsync()
    {
        timer = new Timer(async (state) =>
        {
            foreach (var url in Urls)
            {
                try
                {
                    string fullurl = $"{url}/nodeData";
                    var nodeData = await http.GetFromJsonAsync<NodeData>($"{url}/nodeData");
                    if (nodeData != null)
                    {
                        data[url] = nodeData;
                    }
                }
                catch (Exception ex)
                {
                    Console.WriteLine($"Error fetching data from {url}: {ex.Message}");
                }
            }
            InvokeAsync(StateHasChanged);
        }, null, 0, 5000);
    }
}

